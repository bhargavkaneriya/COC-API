'use strict';
/*
 *---------------------------------------------------------------
 * Stripe Handler
 *---------------------------------------------------------------
 *
 * This handler is used to add, delete and list stripe card.
 * 
 *     listCards - List cards
 *     createCustomerProfile - Create user stripe profile
 *     createToken - Add stripe token
 *     createSource - Add card
 *     deleteSource - Delete card
 *
 */

const Stripe = require('stripe');

/**
* Method used to get list of cards
*
* @param {Object} requestParam - An object with keys stripe_profile_id, stripe_key
*/
const listCards = (requestParam)=> {
    return new Promise((resolve, reject) => {
        const stripe = new Stripe(requestParam.stripe_key);
        stripe.customers.listSources(requestParam.stripe_profile_id, (error, response) => {
            if (error) {
                reject(error);
                return;
            }
            resolve(response);
            return;
        });
    })
};

/**
* Method used to create customer profile
*
* @param {Object} requestParam - An object with keys email, description, stripe_key
*/
const createCustomerProfile = (requestParam)=> {
    return new Promise((resolve, reject) => {
        const stripe = new Stripe(requestParam.stripe_key);
        stripe.customers.create({ email: requestParam.email, description: requestParam.description }, (error, response) => {
            if (error) {
                reject(error);
                return;
            }
            resolve(response);
            return;
        });
    })
};

/**
* Method used to create token
*
* @param {Object} requestParam - An object with keys object of card/bank, stripe_key
*/
const createToken = (requestParam, stripe_key)=> {
    return new Promise((resolve, reject) => {
        const stripe = new Stripe(stripe_key);
        stripe.tokens.create(requestParam, (error, response) => {
            if (error) {
                reject(error);
                return;
            }
            resolve(response);
            return;
        });
    })
};

/**
* Method used to create source
*
* @param {Object} requestParam - An object with keys stripe_profile_id, token, stripe_key
*/
const createSource = (requestParam)=> {
    return new Promise((resolve, reject) => {
        const stripe = new Stripe(requestParam.stripe_key);
        stripe.customers.createSource(requestParam.stripe_profile_id, { source: requestParam.token },  (error, response) => {
            if (error) {
                reject(error);
                return;
            }
            resolve(response);
            return;
        });
    })
};

/**
* Method used to delete source
*
* @param {Object} requestParam - An object with keys stripe_profile_id, id, stripe_key
*/
const deleteSource = (requestParam)=> {
    return new Promise((resolve, reject) => {
        const stripe = new Stripe(requestParam.stripe_key);
        stripe.customers.deleteSource(requestParam.stripe_profile_id, requestParam.id,  (error, response) => {
            if (error) {
                reject(error);
                return;
            }
            resolve(response);
            return;
        });
    })
};


module.exports = {
    listCards,
    createCustomerProfile,
    createToken,
    createSource,
    deleteSource,
};